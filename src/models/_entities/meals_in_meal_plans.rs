//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "meals_in_meal_plans")]
pub struct Model {
    pub created_at: DateTime,
    pub updated_at: DateTime,
    #[sea_orm(primary_key)]
    pub id: i32,
    pub meal_plan_id: i32,
    pub recipe_id: Option<i32>,
    pub untracked_meal_name: Option<String>,
    pub is_cooked: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::meal_plans::Entity",
        from = "Column::MealPlanId",
        to = "super::meal_plans::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    MealPlans,
}

impl Related<super::meal_plans::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MealPlans.def()
    }
}
