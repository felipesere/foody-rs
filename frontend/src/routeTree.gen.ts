/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth.index'
import { Route as AuthMealplanImport } from './routes/_auth.mealplan'
import { Route as AuthIngredientsImport } from './routes/_auth.ingredients'
import { Route as AuthRecipesIndexImport } from './routes/_auth.recipes.index'
import { Route as AuthShoppinglistShoppinglistIdImport } from './routes/_auth.shoppinglist.$shoppinglistId'
import { Route as AuthRecipesNewImport } from './routes/_auth.recipes.new'
import { Route as AuthRecipesRecipeIdImport } from './routes/_auth.recipes.$recipeId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthMealplanRoute = AuthMealplanImport.update({
  id: '/mealplan',
  path: '/mealplan',
  getParentRoute: () => AuthRoute,
} as any)

const AuthIngredientsRoute = AuthIngredientsImport.update({
  id: '/ingredients',
  path: '/ingredients',
  getParentRoute: () => AuthRoute,
} as any)

const AuthRecipesIndexRoute = AuthRecipesIndexImport.update({
  id: '/recipes/',
  path: '/recipes/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthShoppinglistShoppinglistIdRoute =
  AuthShoppinglistShoppinglistIdImport.update({
    id: '/shoppinglist/$shoppinglistId',
    path: '/shoppinglist/$shoppinglistId',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthRecipesNewRoute = AuthRecipesNewImport.update({
  id: '/recipes/new',
  path: '/recipes/new',
  getParentRoute: () => AuthRoute,
} as any)

const AuthRecipesRecipeIdRoute = AuthRecipesRecipeIdImport.update({
  id: '/recipes/$recipeId',
  path: '/recipes/$recipeId',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/ingredients': {
      id: '/_auth/ingredients'
      path: '/ingredients'
      fullPath: '/ingredients'
      preLoaderRoute: typeof AuthIngredientsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/mealplan': {
      id: '/_auth/mealplan'
      path: '/mealplan'
      fullPath: '/mealplan'
      preLoaderRoute: typeof AuthMealplanImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/recipes/$recipeId': {
      id: '/_auth/recipes/$recipeId'
      path: '/recipes/$recipeId'
      fullPath: '/recipes/$recipeId'
      preLoaderRoute: typeof AuthRecipesRecipeIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/recipes/new': {
      id: '/_auth/recipes/new'
      path: '/recipes/new'
      fullPath: '/recipes/new'
      preLoaderRoute: typeof AuthRecipesNewImport
      parentRoute: typeof AuthImport
    }
    '/_auth/shoppinglist/$shoppinglistId': {
      id: '/_auth/shoppinglist/$shoppinglistId'
      path: '/shoppinglist/$shoppinglistId'
      fullPath: '/shoppinglist/$shoppinglistId'
      preLoaderRoute: typeof AuthShoppinglistShoppinglistIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/recipes/': {
      id: '/_auth/recipes/'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof AuthRecipesIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthIngredientsRoute: typeof AuthIngredientsRoute
  AuthMealplanRoute: typeof AuthMealplanRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthRecipesRecipeIdRoute: typeof AuthRecipesRecipeIdRoute
  AuthRecipesNewRoute: typeof AuthRecipesNewRoute
  AuthShoppinglistShoppinglistIdRoute: typeof AuthShoppinglistShoppinglistIdRoute
  AuthRecipesIndexRoute: typeof AuthRecipesIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthIngredientsRoute: AuthIngredientsRoute,
  AuthMealplanRoute: AuthMealplanRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthRecipesRecipeIdRoute: AuthRecipesRecipeIdRoute,
  AuthRecipesNewRoute: AuthRecipesNewRoute,
  AuthShoppinglistShoppinglistIdRoute: AuthShoppinglistShoppinglistIdRoute,
  AuthRecipesIndexRoute: AuthRecipesIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/ingredients': typeof AuthIngredientsRoute
  '/mealplan': typeof AuthMealplanRoute
  '/': typeof AuthIndexRoute
  '/recipes/$recipeId': typeof AuthRecipesRecipeIdRoute
  '/recipes/new': typeof AuthRecipesNewRoute
  '/shoppinglist/$shoppinglistId': typeof AuthShoppinglistShoppinglistIdRoute
  '/recipes': typeof AuthRecipesIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/ingredients': typeof AuthIngredientsRoute
  '/mealplan': typeof AuthMealplanRoute
  '/': typeof AuthIndexRoute
  '/recipes/$recipeId': typeof AuthRecipesRecipeIdRoute
  '/recipes/new': typeof AuthRecipesNewRoute
  '/shoppinglist/$shoppinglistId': typeof AuthShoppinglistShoppinglistIdRoute
  '/recipes': typeof AuthRecipesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/ingredients': typeof AuthIngredientsRoute
  '/_auth/mealplan': typeof AuthMealplanRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/recipes/$recipeId': typeof AuthRecipesRecipeIdRoute
  '/_auth/recipes/new': typeof AuthRecipesNewRoute
  '/_auth/shoppinglist/$shoppinglistId': typeof AuthShoppinglistShoppinglistIdRoute
  '/_auth/recipes/': typeof AuthRecipesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/ingredients'
    | '/mealplan'
    | '/'
    | '/recipes/$recipeId'
    | '/recipes/new'
    | '/shoppinglist/$shoppinglistId'
    | '/recipes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/ingredients'
    | '/mealplan'
    | '/'
    | '/recipes/$recipeId'
    | '/recipes/new'
    | '/shoppinglist/$shoppinglistId'
    | '/recipes'
  id:
    | '__root__'
    | '/_auth'
    | '/login'
    | '/_auth/ingredients'
    | '/_auth/mealplan'
    | '/_auth/'
    | '/_auth/recipes/$recipeId'
    | '/_auth/recipes/new'
    | '/_auth/shoppinglist/$shoppinglistId'
    | '/_auth/recipes/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/ingredients",
        "/_auth/mealplan",
        "/_auth/",
        "/_auth/recipes/$recipeId",
        "/_auth/recipes/new",
        "/_auth/shoppinglist/$shoppinglistId",
        "/_auth/recipes/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/ingredients": {
      "filePath": "_auth.ingredients.tsx",
      "parent": "/_auth"
    },
    "/_auth/mealplan": {
      "filePath": "_auth.mealplan.tsx",
      "parent": "/_auth"
    },
    "/_auth/": {
      "filePath": "_auth.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/recipes/$recipeId": {
      "filePath": "_auth.recipes.$recipeId.tsx",
      "parent": "/_auth"
    },
    "/_auth/recipes/new": {
      "filePath": "_auth.recipes.new.tsx",
      "parent": "/_auth"
    },
    "/_auth/shoppinglist/$shoppinglistId": {
      "filePath": "_auth.shoppinglist.$shoppinglistId.tsx",
      "parent": "/_auth"
    },
    "/_auth/recipes/": {
      "filePath": "_auth.recipes.index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
